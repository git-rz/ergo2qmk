enum custom_keycodes {
  RGB_SLD = EZ_SAFE_RANGE,
  HSV_172_255_255,
  HSV_86_255_128,
  ST_MACRO_0,
  ST_MACRO_1,
  ST_MACRO_2,
  ST_MACRO_3,
  ST_MACRO_4,
  ST_MACRO_5,
  ST_MACRO_6,
};
bool process_record_user(uint16_t keycode, keyrecord_t *record) {
  switch (keycode) {
    case ST_MACRO_0:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_LSFT(SS_TAP(X_QUOTE)));

    }
    break;
    case ST_MACRO_1:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_TAP(X_D));

    }
    break;
    case ST_MACRO_2:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_LSFT(SS_TAP(X_5)));

    }
    break;
    case ST_MACRO_3:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_TAP(X_LEFT));

    }
    break;
    case ST_MACRO_4:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_TAP(X_DOWN));

    }
    break;
    case ST_MACRO_5:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_TAP(X_UP));

    }
    break;
    case ST_MACRO_6:
    if (record->event.pressed) {
      SEND_STRING(SS_LCTL(SS_TAP(X_B)) SS_DELAY(100) SS_TAP(X_RIGHT));

    }
    break;
    case RGB_SLD:
      if (record->event.pressed) {
        rgblight_mode(1);
      }
      return false;
    case HSV_172_255_255:
      if (record->event.pressed) {
        rgblight_mode(1);
        rgblight_sethsv(172,255,255);
      }
      return false;
    case HSV_86_255_128:
      if (record->event.pressed) {
        rgblight_mode(1);
        rgblight_sethsv(86,255,128);
      }
      return false;
  }
  return true;

}

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
[0] = LAYOUT( KC_GRAVE,KC_Q,LGUI_T(KC_W),KC_E,KC_R,KC_T,KC_Y,KC_U,KC_I,KC_O,KC_P,KC_BSLASH,LCTL_T(KC_ESCAPE),LSFT_T(KC_A),KC_S,LALT_T(KC_D),LT(4,KC_F),KC_G,KC_H,KC_J,RALT_T(KC_K),KC_L,RSFT_T(KC_SCOLON),RCTL_T(KC_QUOTE),LSFT_T(KC_LBRACKET),LCTL_T(KC_Z),KC_X,LT(5,KC_C),LT(1,KC_V),LT(7,KC_B),LT(7,KC_N),LT(5,KC_M),LT(1,KC_COMMA),KC_DOT,RCTL_T(KC_SLASH),RSFT_T(KC_RBRACKET),LALT_T(KC_DELETE),LT(2,KC_TAB),LT(3,KC_SPACE),LT(3,KC_ENTER),LT(2,KC_MINUS),RALT_T(KC_EQUAL)),
[1] = LAYOUT( KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_UP,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_INSERT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,LSFT_T(KC_PGUP),KC_LEFT,KC_DOWN,KC_RIGHT,KC_TRANSPARENT,KC_LEFT,KC_DOWN,KC_UP,KC_RIGHT,RSFT_T(KC_HOME),KC_TRANSPARENT,KC_TRANSPARENT,LCTL_T(KC_PGDOWN),KC_DELETE,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,RCTL_T(KC_END),KC_TRANSPARENT,KC_TRANSPARENT,KC_LALT,KC_LCTRL,KC_RCTRL,KC_RALT,KC_TRANSPARENT),
[2] = LAYOUT( KC_TRANSPARENT,KC_1,KC_2,KC_3,KC_4,KC_5,KC_GRAVE,KC_PIPE,KC_DQUO,KC_LCBR,KC_RCBR,KC_TRANSPARENT,KC_CAPSLOCK,KC_EXLM,KC_AT,KC_HASH,KC_DLR,KC_PERC,KC_CIRC,KC_AMPR,KC_ASTR,KC_LPRN,KC_RPRN,KC_TRANSPARENT,KC_SCROLLLOCK,KC_6,KC_7,KC_8,KC_9,KC_0,KC_GRAVE,KC_BSLASH,KC_QUOTE,KC_LBRACKET,KC_RBRACKET,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT),
[3] = LAYOUT( KC_TRANSPARENT,KC_ESCAPE,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,TO(0),KC_KP_MINUS,KC_KP_7,KC_KP_8,KC_KP_9,KC_KP_PLUS,KC_BSPACE,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_NUMLOCK,KC_EQUAL,KC_KP_4,KC_KP_5,KC_KP_6,RSFT_T(KC_KP_ENTER),KC_KP_COMMA,KC_TRANSPARENT,LCTL_T(KC_TAB),KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_B,KC_KP_ASTERISK,KC_KP_1,KC_KP_2,KC_KP_3,RCTL_T(KC_KP_SLASH),KC_NUMLOCK,KC_LALT,KC_TRANSPARENT,KC_BSPACE,KC_KP_0,KC_KP_0,KC_KP_DOT),
[4] = LAYOUT( KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_F7,KC_F8,KC_F9,KC_F10,KC_F13,KC_TRANSPARENT,KC_TRANSPARENT,KC_LGUI,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_F4,KC_F5,KC_F6,KC_F11,RCTL_T(KC_F14),KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_LCTRL,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_F1,KC_F2,KC_F3,KC_F12,RSFT_T(KC_F15),KC_LSHIFT,KC_LCTRL,KC_LALT,KC_RALT,KC_RCTRL,KC_RSHIFT),
[5] = LAYOUT( KC_TRANSPARENT,RESET,KC_TRANSPARENT,KC_MS_UP,KC_TRANSPARENT,TO(3),TO(6),KC_AUDIO_VOL_UP,KC_TRANSPARENT,KC_TRANSPARENT,KC_PSCREEN,KC_TRANSPARENT,KC_TRANSPARENT,RGB_TOG,KC_MS_LEFT,KC_MS_DOWN,KC_MS_RIGHT,KC_MS_WH_UP,KC_TRANSPARENT,KC_AUDIO_VOL_DOWN,KC_MEDIA_PREV_TRACK,KC_MEDIA_NEXT_TRACK,RSFT_T(KC_MEDIA_PLAY_PAUSE),KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_MS_BTN1,KC_MS_BTN3,KC_MS_BTN2,KC_MS_WH_DOWN,KC_TRANSPARENT,KC_AUDIO_MUTE,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_MS_BTN2,KC_MS_BTN1,KC_MS_BTN2,KC_TRANSPARENT,KC_TRANSPARENT),
[6] = LAYOUT( KC_ESCAPE,KC_Q,KC_W,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,TO(0),KC_LCTRL,KC_A,KC_S,KC_D,KC_F,KC_TRANSPARENT,KC_TRANSPARENT,KC_J,KC_K,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_LSHIFT,KC_Z,KC_TRANSPARENT,KC_C,KC_V,KC_B,KC_N,KC_M,KC_COMMA,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_LALT,KC_TAB,KC_SPACE,KC_ENTER,KC_MINUS,KC_BSPACE),
[7] = LAYOUT( KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,LALT(LCTL(KC_INSERT)),LALT(LCTL(KC_DELETE)),KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,ST_MACRO_0,ST_MACRO_1,KC_TRANSPARENT,KC_TRANSPARENT,ST_MACRO_3,ST_MACRO_4,ST_MACRO_5,ST_MACRO_6,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,ST_MACRO_2,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT,KC_TRANSPARENT),

};

const uint8_t PROGMEM ledmap[][DRIVER_LED_TOTAL][3] = {
    [0] = { {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {105,255,255} , {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {105,255,255}, {105,255,255}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {249,228,255}, {105,255,255}, {249,228,255},  {154,255,255},  {154,255,255},  {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {105,255,255}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {249,228,255}, {249,228,255}, {249,228,255}, {173,110,236}, {173,110,236}, {173,110,236}, {173,110,236}, {249,228,255}, {249,228,255}, {249,228,255}, {173,110,236}, {249,228,255}, {249,228,255}, {249,228,255},  },
    [1] = { {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {15,176,169} , {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {14,255,255}, {0,0,0}, {105,255,255}, {105,255,255}, {0,0,0}, {14,255,255}, {14,255,255}, {0,0,0}, {14,255,255}, {0,0,0}, {14,255,255}, {14,255,255}, {0,0,0}, {0,0,0}, {14,255,255}, {14,255,255},  {0,0,0},  {0,0,0},  {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {15,176,169}, {0,0,0}, {14,255,255}, {0,0,0}, {0,0,0}, {14,255,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {14,255,255}, {14,255,255}, {0,0,0}, {14,255,255}, {0,0,0}, {14,255,255}, {14,255,255}, {0,0,0}, {0,0,0}, {14,255,255}, {14,255,255},  },
    [2] = { {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {105,255,255} , {154,255,255}, {249,228,255}, {154,255,255}, {154,255,255}, {249,228,255}, {154,255,255}, {105,255,255}, {105,255,255}, {154,255,255}, {249,228,255}, {154,255,255}, {154,255,255}, {249,228,255}, {154,255,255}, {154,255,255}, {249,228,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255},  {154,255,255},  {154,255,255},  {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {105,255,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {105,255,255}, {105,255,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {249,228,255}, {154,255,255}, {154,255,255}, {154,255,255},  },
    [3] = { {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {105,255,255} , {173,110,236}, {15,97,236}, {32,255,234}, {0,0,0}, {173,110,236}, {0,0,0}, {105,255,255}, {105,255,255}, {173,110,236}, {173,110,236}, {173,110,236}, {0,0,0}, {0,0,0}, {0,0,0}, {105,255,255}, {173,110,236}, {0,0,0}, {146,224,255}, {146,224,255}, {146,224,255},  {146,224,255},  {146,224,255},  {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {154,255,255}, {249,228,255}, {249,228,255}, {0,204,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {249,228,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {154,255,255}, {249,228,255}, {105,255,255}, {249,228,255}, {105,255,255}, {249,228,255}, {15,97,236},  },
    [4] = { {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {15,176,169} , {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {15,176,169}, {15,176,169}, {0,0,0}, {15,176,169}, {0,0,0}, {15,176,169}, {15,176,169}, {0,0,0}, {15,176,169}, {15,176,169}, {0,0,0}, {146,224,255}, {146,224,255}, {146,224,255},  {146,224,255},  {146,224,255},  {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {15,176,169}, {0,0,0}, {0,0,0}, {0,0,0}, {146,224,255}, {146,224,255}, {146,224,255}, {15,176,169}, {15,176,169}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255},  },
    [5] = { {47,73,221}, {47,73,221}, {47,73,221}, {47,73,221}, {47,73,221}, {47,73,221}, {85,203,158} , {85,203,158}, {85,203,158}, {35,255,255}, {47,73,221}, {14,255,255}, {85,203,158}, {47,73,221}, {47,73,221}, {85,203,158}, {14,255,255}, {14,255,255}, {47,73,221}, {14,255,255}, {85,203,158}, {47,73,221}, {0,183,238}, {0,205,155}, {47,73,221}, {47,73,221}, {47,73,221},  {47,73,221},  {47,73,221},  {47,73,221}, {47,73,221}, {47,73,221}, {47,73,221}, {85,203,158}, {47,73,221}, {47,73,221}, {35,255,255}, {85,203,158}, {85,203,158}, {85,203,158}, {47,73,221}, {47,73,221}, {134,255,213}, {85,203,158}, {134,255,213}, {134,255,213}, {85,203,158}, {134,255,213}, {47,73,221}, {85,203,158}, {0,0,255}, {0,205,155}, {47,73,221}, {47,73,221},  },
    [6] = { {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {105,255,255} , {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239},  {0,249,239},  {0,249,239},  {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {105,255,255}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {105,255,255}, {105,255,255}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {0,249,239}, {35,255,255}, {0,249,239}, {0,249,239},  },
    [7] = { {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0} , {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {154,86,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,204,255}, {0,0,0}, {0,0,0}, {154,86,255}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},  {0,0,0},  {0,0,0},  {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {50,153,244}, {0,0,0}, {0,0,0}, {50,153,244}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {50,153,244}, {141,255,233}, {141,255,233}, {50,153,244}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}, {0,0,0},  },
    [8] = { {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {105,255,255} , {173,110,236}, {15,97,236}, {32,255,234}, {0,0,0}, {173,110,236}, {0,0,0}, {105,255,255}, {105,255,255}, {173,110,236}, {173,110,236}, {173,110,236}, {0,0,0}, {0,0,0}, {0,0,0}, {105,255,255}, {173,110,236}, {0,0,0}, {146,224,255}, {146,224,255}, {146,224,255},  {146,224,255},  {146,224,255},  {146,224,255}, {146,224,255}, {146,224,255}, {146,224,255}, {249,228,255}, {249,228,255}, {249,228,255}, {0,204,255}, {14,255,255}, {14,255,255}, {14,255,255}, {105,255,255}, {105,255,255}, {14,255,255}, {154,255,255}, {14,255,255}, {14,255,255}, {14,255,255}, {14,255,255}, {249,228,255}, {105,255,255}, {249,228,255}, {105,255,255}, {249,228,255}, {15,97,236},  },
};
